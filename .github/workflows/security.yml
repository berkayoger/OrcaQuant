
name: Security Audit

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  audit:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

          cache: 'pip'

      - name: Verify .env.example keys
        run: |
          python scripts/ensure_env_keys.py --check

      # Dosya eksikse CI içinde oluştur (merge’lerde kırılmasın)

      - name: Ensure curated audit requirements file
        run: |
          mkdir -p .github
          if [ ! -f .github/audit-requirements.txt ]; then
            cat > .github/audit-requirements.txt <<'REQ'
Flask==2.3.3
Flask-SQLAlchemy==3.1.1
redis==5.0.4
passlib==1.7.4
argon2-cffi==23.1.0
PyJWT==2.8.0
cryptography==44.0.1
email-validator==2.1.0
pyotp==2.9.0
slowapi==0.1.9
python-multipart==0.0.18
future==0.18.3
REQ
          fi

      - name: Install audit deps (curated + tools)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r .github/audit-requirements.txt
          python -m pip install --upgrade pip-audit cyclonedx-bom
      - name: pip check
        run: pip check
      - name: pip-audit
        run: pip-audit -r .github/audit-requirements.txt --progress-spinner=off --strict
      - name: SBOM (CycloneDX)
        # SBOM'u tam requirements'tan üret – modül çağrısı ile daha taşınabilir. CLI yoksa fallback.
        run: python -m cyclonedx_py -r requirements.txt -o sbom.json || cyclonedx-bom -r requirements.txt -o sbom.json
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

