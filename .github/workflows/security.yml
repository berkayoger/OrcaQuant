name: Security
on:
  pull_request:
  push:
    branches: [main, develop, staging]

permissions:
  contents: read
  security-events: write

jobs:
  deps_and_static:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12', cache: 'pip' }
      - run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pip-audit bandit cyclonedx-bom
      - name: pip-audit (fail on high)
        run: pip-audit -r requirements.txt --failure-severity high
      - name: Bandit
        run: bandit -r backend -ll
      - name: Generate SBOM (CycloneDX)
        run: cyclonedx-py --evidence --format json --outfile sbom.json
      - uses: actions/upload-artifact@v4
        with: { name: sbom, path: sbom.json }

  docker_scan:
    runs-on: ubuntu-latest
    needs: deps_and_static
    steps:
      - uses: actions/checkout@v4
      - run: docker build -t ytd-kopya:scan -f backend/Dockerfile .
      - uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ytd-kopya:scan
          severity: CRITICAL,HIGH
          exit-code: '1'

  dockerfile_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: backend/Dockerfile
