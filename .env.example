# ---------- GENEL AYARLAR ----------
FLASK_ENV=development                     # veya production
SECRET_KEY=change-me                      # Flask gizli anahtarı
LOG_LEVEL=INFO                            # INFO, DEBUG, WARNING
CORS_ORIGINS=http://localhost:3000        # Virgülle ayrık origin listesi
PRICE_CACHE_TTL=300                       # Saniye cinsinden fiyat cache süresi
SKIP_HEAVY_IMPORTS=false                  # True ise ağır import'ları atla
ENABLE_SCHEDULER=false                    # True ise background scheduler çalışır
USE_REDIS_FEATURE_FLAGS=false             # Özellik bayrakları için Redis kullan
REDIS_URL=redis://localhost:6379/0        # Redis URL (flag yönetimi için)

# Sağlık endpoint'leri için auth gerekli mi?
REQUIRE_AUTH_FOR_HEALTH=false

# Limit reset günü (1-28 arası). Ayın bu gününde aylık limitler sıfırlanır.
# Boş bırakılırsa varsayılan: her ayın 1'i.
LIMITS_RESET_DAY=1

# ---------- DRAKS Karar Motoru ----------
# FastAPI servis adresi (ayrı motor kullanıyorsanız). docker-compose içinde genelde:
#   http://draks-engine:8000
# Entegre (Flask içindeki minimal motor) kullanıyorsanız bu değişkeni boş bırakabilirsiniz.
DRAKS_ENGINE_URL=http://localhost:8000
# Gelişmiş ölçekleme/filtreleme (rejime duyarlı) için toggle
# Flag ile de açılabilir: draks_advanced / draks_advanced_enabled
DRAKS_ADVANCED=false
# Canlı modda daha sıkı risk kapakları
# Sadece ölçek tavanını daraltır; limit/flag kontrollerini etkilemez
DRAKS_LIVE_MODE=false
# Özelliği açmak için feature flag kullanın:
#  - Admin Feature Flags arayüzünden veya API ile "draks" / "draks_enabled" → true yapın.
#  - Redis kullanıyorsanız key: feature_flag:draks (value: "true")

# ---------- VERİTABANI ----------
DATABASE_URL=postgresql://user:password@localhost:5432/ytdcrypto
# Opsiyonel: SQLite yedeği almak için dosya yolu
DATABASE_FILE=./ytdcrypto.db
BACKUP_RETENTION=7                        # Gün cinsinden tutulacak yedek sayısı
ALEMBIC_INI=alembic.ini                   # Migration config yolu
ALEMBIC_SCRIPT_LOCATION=alembic           # Migration script dizini

# ---------- CELERY ----------
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}

# ---------- PAYMENT (IYZICO) ----------
IYZICO_API_KEY=
IYZICO_SECRET=
IYZICO_BASE_URL=https://api.iyzipay.com

# ---------- JWT / AUTH ----------
JWT_SECRET_KEY=change-me-too
ACCESS_TOKEN_SECRET=change-me-access
REFRESH_TOKEN_SECRET=change-me-refresh
ACCESS_TOKEN_EXP_MINUTES=15
REFRESH_TOKEN_EXP_DAYS=7
# Opsiyonel eski değişken adları
JWT_ACCESS_TOKEN_EXPIRES=3600    # seconds
JWT_REFRESH_TOKEN_EXPIRES=86400  # seconds
DISABLE_JWT_CHECKS=false         # True ise testlerde JWT doğrulaması pasif

# ---------- MAIL (OPSİYONEL) ----------
MAIL_SERVER=
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=
MAIL_PASSWORD=

# ---------- PLAN FİYATLARI ----------
BACKEND_PLAN_PRICES_BASIC=9.99
BACKEND_PLAN_PRICES_ADVANCED=24.99
BACKEND_PLAN_PRICES_PREMIUM=49.99

# ---------- UYARI / LOG ----------
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx/yyy/zzz
ADMIN_ALERT_EMAIL=admin@example.com
AUDIT_FALLBACK_LOG_DIR=./logs            # Slack yoksa logların yazılacağı dizin

# ---------- ADMIN / GÜVENLİK ----------
ADMIN_ACCESS_KEY=

# ---------- STAGING / İNFR A ----------
# Caddy reverse proxy için FQDN
STAGING_FQDN=staging.example.com

# Backend app import yolları (virgülle ayrık)
APP_IMPORT_CANDIDATES=backend.app:create_app,backend.app:app,app:create_app,app:app

# Opsiyonel: Gunicorn ayarları
GUNICORN_WORKERS=4
GUNICORN_THREADS=4

# Sunucu host/port override (genelde gerekmez)
HOST=0.0.0.0
PORT=8000

# Sistemde gerçek değerleri içeren `.env.staging` oluşturup
# gizli anahtarları oraya yazmayı unutmayın.
