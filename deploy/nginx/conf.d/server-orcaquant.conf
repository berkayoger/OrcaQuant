# SSL terminasyonu ve reverse proxy (blue/green desteği)

upstream orca_api_active {
  # Aktif upstream dosyası (switch-blue-green.sh tarafından yönetilir)
  include /etc/nginx/upstreams/active_api.conf;
  keepalive 32;
}

server {
  listen 80;
  server_name ${APP_DOMAIN} www.${APP_DOMAIN};

  location /.well-known/acme-challenge/ {
    root /var/www/spa;
  }

  # HTTP -> HTTPS yönlendirme (sertifika alındıktan sonra aktifleştir)
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  server_name ${APP_DOMAIN} www.${APP_DOMAIN};

  # Let's Encrypt (mount edildi)
  ssl_certificate     /etc/letsencrypt/live/${APP_DOMAIN}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${APP_DOMAIN}/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;

  # Güvenlik başlıkları
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options DENY always;
  add_header Referrer-Policy no-referrer-when-downgrade always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

  # CSP'yi Report-Only ile başlayın; nonce bazlı yapıya geçiş önerilir
  add_header Content-Security-Policy-Report-Only "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self'; connect-src 'self' https:; upgrade-insecure-requests" always;

  # --- SPA (Vite build) ---
  root /var/www/spa;
  index index.html;

  location = / {
    try_files /index.html =404;
  }

  location /assets/ {
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
  }

  # --- API ---
  location /api/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://orca_api_active;
    include /etc/nginx/snippets/proxy-params.conf;
  }

  # --- Auth/Login gibi kritik yolları daha sıkı limitlemek için örnek ---
  # location = /api/auth/login {
  #   limit_req zone=api burst=5 nodelay;
  #   proxy_pass http://orca_api_active;
  #   include /etc/nginx/snippets/proxy-params.conf;
  # }

  # --- WebSocket (Socket.IO) ---
  location /socket.io/ {
    proxy_pass http://orca_api_active/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_read_timeout 75s;
  }

  # --- Genel uygulama ---
  location / {
    proxy_pass http://orca_api_active;
    include /etc/nginx/snippets/proxy-params.conf;
    # SPA history fallback gerekiyorsa: try_files $uri /index.html;
  }

  # Health ve metrics
  location = /healthz {
    proxy_pass http://orca_api_active;
    include /etc/nginx/snippets/proxy-params.conf;
  }

  location = /metrics {
    proxy_pass http://orca_api_active;
    include /etc/nginx/snippets/proxy-params.conf;
  }

  # Statik dosyalar (Flask tarafından servis edilmediğinde)
  location /static/ {
    alias /opt/orcaquant/frontend/static/;
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  client_max_body_size 10M;
  access_log /var/log/nginx/orcaquant.access.log;
  error_log  /var/log/nginx/orcaquant.error.log;
}
